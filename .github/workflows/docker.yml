# This workflow builds docker image and pushes it.

name: Build Docker Image

on:
  workflow_dispatch:
  pull_request:
    types:
      - ready_for_review
    branches:
      - beta
      - release
  pull_request_target:
    types:
      - closed
    branches:
      - beta
      - release

concurrency:
  group: docker-build-${{ github.ref_name }}

permissions:
  contents: read
  packages: write

jobs:
  build-release-docker:
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request_target' ||
      contains(github.event.pull_request.labels.*.name, 'release')
    env:
      push: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v4

      - id: match
        name: Match package version
        run: |
          version=$(sed -nr "s/^\s*version\s*=\s*\"(.*)\"/\1/p" pyproject.toml)
          echo "tag=$version" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: env.push
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: export requirements
        run: |
          pipx install poetry
          pipx inject poetry poetry-plugin-export
          poetry export -o requirements.txt --without-hashes
          cp docker/.dockerignore .dockerignore

      - name: Build and push Docker images
        id: docker-build-push
        uses: docker/build-push-action@v5
        with:
          context: "."
          push: ${{ env.push }}
          file: ./docker/Dockerfile
          tags: |
            ghcr.io/aioqzone/qzone3tg:${{ steps.match.outputs.tag }}
            ghcr.io/aioqzone/qzone3tg:latest-beta
